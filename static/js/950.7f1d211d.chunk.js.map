{"version":3,"file":"static/js/950.7f1d211d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","redux/contacts/contactsSelectors.js","redux/filter/filterSelectors.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","webpack://react-homework-template/./src/components/ContactDataUpdateForm/ContactDataUpdateForm.module.css?d6ab","components/ContactDataUpdateForm/ContactDataUpdateForm.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/PhonebookPage/PhonebookPage.module.css?4961","pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Loader_overlay__vojGq\",\"ldsRoller\":\"Loader_ldsRoller__5cE1k\"};","import style from './Loader.module.css';\n\nexport function Loader() {\n  return (\n    <div className={style.overlay}>\n      <div className={style.ldsRoller}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/filterSelectors';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","export const selectFilter = state => state.filter.value;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_form\":\"Phonebook_phonebook_form__PGEQf\",\"phonebook_label\":\"Phonebook_phonebook_label__jbjzb\",\"phonebook_submit_btn\":\"Phonebook_phonebook_submit_btn__ju3PU\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport style from './Phonebook.module.css';\n\nexport const Phonebook = ({ onAddContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const state = {\n    name,\n    number,\n  };\n\n  const onInputChange = ({ target: { name: inputName, value } }) => {\n    switch (inputName) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        if (!/^[0-9\\s-+()]*$/.test(value)) {\n          toast.error('Please enter only numbers, symbols and spaces!');\n          break;\n        }\n        setNumber(value);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const onFormSubmitAddContact = e => {\n    e.preventDefault();\n    onAddContact(state);\n    onFormReset();\n  };\n\n  const onFormReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={onFormSubmitAddContact} className={style.phonebook_form}>\n        <label className={style.phonebook_label}>\n          Name\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter a name\"\n          />\n        </label>\n        <label className={style.phonebook_label}>\n          Number\n          <input\n            onChange={onInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter a number\"\n          />\n        </label>\n        <button type=\"submit\" className={style.phonebook_submit_btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_update_form\":\"ContactDataUpdateForm_contacts_update_form__1NHH8\",\"contacts_update_label\":\"ContactDataUpdateForm_contacts_update_label__tNyJC\",\"contacts_update_button\":\"ContactDataUpdateForm_contacts_update_button__NECPg\"};","import { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { updateContact } from 'redux/contacts/contactsOperations';\nimport style from './ContactDataUpdateForm.module.css';\n\nexport const ContactDataUpdateForm = ({ onCloseModal, updateContactId }) => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  const userToUpdateArr = contacts.filter(\n    contact => contact.id === updateContactId\n  );\n  const { id, name: userName, number: userNumber } = userToUpdateArr[0];\n\n  const [name, setName] = useState(userName);\n  const [number, setNumber] = useState(userNumber);\n\n  const stateData = {\n    id,\n    name,\n    number,\n  };\n\n  const onInputChange = ({ target: { name: inputName, value } }) => {\n    switch (inputName) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        if (!/^[0-9\\s-+()]*$/.test(value)) {\n          toast.error('Please enter only numbers, symbols and spaces!');\n          break;\n        }\n        setNumber(value);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  const onFormSubmitEditContact = e => {\n    e.preventDefault();\n\n    const uniqUserSearch = editedUser =>\n      contacts.find(\n        ({ id, name }) => id !== editedUser.id && name === editedUser.name\n      );\n    uniqUserSearch(stateData)\n      ? toast.info(`${stateData.name} is already in Phonebook`)\n      : dispatch(updateContact(stateData));\n\n    onCloseModal();\n    onFormReset();\n  };\n\n  const onFormReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <h2>Update contacts</h2>\n      <form\n        onSubmit={onFormSubmitEditContact}\n        className={style.contacts_update_form}\n      >\n        <label className={style.contacts_update_label}>\n          Name\n          <input\n            onChange={onInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter a name\"\n          />\n        </label>\n        <label className={style.contacts_update_label}>\n          Number\n          <input\n            onChange={onInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n          />\n        </label>\n        <button className={style.contacts_update_button}>Update</button>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal\":\"Modal_modal__DJDMv\"};","import { useEffect } from 'react';\nimport { ContactDataUpdateForm } from 'components/ContactDataUpdateForm/ContactDataUpdateForm';\nimport style from './Modal.module.css';\n\nexport const Modal = ({ onCloseModal, updateContactId }) => {\n  useEffect(() => {\n    const onEscClose = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n    window.addEventListener('keydown', onEscClose);\n    return () => {\n      window.removeEventListener('keydown', onEscClose);\n    };\n  }, [onCloseModal]);\n\n  const handleModal = e => {\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <>\n      <div className={style.overlay} onClick={handleModal}>\n        <div className={style.modal}>\n          <ContactDataUpdateForm\n            onCloseModal={onCloseModal}\n            updateContactId={updateContactId}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_list\":\"ContactList_contact_list__tnyRS\",\"contact_list_item\":\"ContactList_contact_list_item__Ts0bB\",\"contact_list_values\":\"ContactList_contact_list_values__WfBQI\",\"contact_list_btn_wrapper\":\"ContactList_contact_list_btn_wrapper__lBDDs\",\"contact_list_btn\":\"ContactList_contact_list_btn__VuGKn\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { VscTrash, VscEdit } from 'react-icons/vsc';\nimport {\n  selectContacts,\n  selectFilterContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { useState } from 'react';\nimport { deleteContacts } from 'redux/contacts/contactsOperations';\nimport { Modal } from 'components/Modal/Modal';\nimport style from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [updateContactId, setUpdateContactId] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilterContacts);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContacts(id));\n  };\n\n  const onModalOpen = id => {\n    setIsModalOpen(true);\n    setUpdateContactId(id);\n  };\n\n  const onCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      {filterContacts.length > 0 && (\n        <ul className={style.contact_list}>\n          {filterContacts.map(({ id, name, number }) => (\n            <li className={style.contact_list_item} key={id} data-id={id}>\n              <p className={style.contact_list_values}>\n                {name}: {number}\n              </p>\n              <div className={style.contact_list_btn_wrapper}>\n                <button\n                  type=\"button\"\n                  name=\"updateBtn\"\n                  onClick={() => onModalOpen(id)}\n                  className={style.contact_list_btn}\n                >\n                  <VscEdit />\n                </button>\n                <button\n                  type=\"button\"\n                  name=\"deleteBtn\"\n                  onClick={() => onDeleteContact(id)}\n                  className={style.contact_list_btn}\n                >\n                  <VscTrash />\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {isModalOpen && (\n        <Modal onCloseModal={onCloseModal} updateContactId={updateContactId} />\n      )}\n      {!contacts.length && (\n        <div className={style.contact_list_empty}>\n          {/* Your phonebook is empty */}\n        </div>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Filter_search__G+v4u\",\"inputName\":\"Filter_inputName__snXo9\"};","import style from './Filter.module.css';\n\nexport const Filter = ({ onChangeFilter }) => {\n  return (\n    <>\n      <label className={style.search}>\n        Search\n        <input\n          onChange={e => onChangeFilter(e)}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\" \"\n          className={style.inputName}\n          title=\"Enter search name\"\n        />\n      </label>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook_main\":\"PhonebookPage_phonebook_main__imL+a\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { toast } from 'react-toastify';\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport { addContacts } from 'redux/contacts/contactsOperations';\n\nimport { Phonebook } from '../../components/Phonebook/Phonebook';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { Loader } from '../../components/Loader/Loader';\nimport style from './PhonebookPage.module.css';\n\nconst PhonebookPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const onAddContact = newUser => {\n    const uniqUserSearch = contacts.find(({ name }) => name === newUser.name);\n    uniqUserSearch\n      ? toast.info(`${uniqUserSearch.name} is already in Phonebook`)\n      : dispatch(addContacts(newUser));\n  };\n\n  const onChangeFilter = e => {\n    dispatch(updateFilter(e.target.value));\n  };\n  return (\n    <div className={style.phonebook_main}>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <Phonebook onAddContact={onAddContact} />\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Filter onChangeFilter={onChangeFilter} />\n      <ContactList />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["Loader","_jsx","className","style","children","_jsxs","selectContacts","state","contacts","selectIsLoading","isLoading","selectFilterContacts","createSelector","filter","value","_ref","name","toLowerCase","includes","Phonebook","onAddContact","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","onInputChange","_ref2","_ref2$target","target","inputName","test","toast","onFormReset","_Fragment","onSubmit","e","preventDefault","onChange","type","title","required","placeholder","ContactDataUpdateForm","onCloseModal","updateContactId","useSelector","dispatch","useDispatch","_userToUpdateArr$","contact","id","userName","userNumber","stateData","editedUser","find","_ref3","concat","updateContact","Modal","useEffect","onEscClose","code","window","addEventListener","removeEventListener","onClick","currentTarget","ContactList","isModalOpen","setIsModalOpen","setUpdateContactId","filterContacts","length","map","onModalOpen","VscEdit","deleteContacts","onDeleteContact","VscTrash","Filter","onChangeFilter","Helmet","newUser","uniqUserSearch","addContacts","updateFilter"],"sourceRoot":""}